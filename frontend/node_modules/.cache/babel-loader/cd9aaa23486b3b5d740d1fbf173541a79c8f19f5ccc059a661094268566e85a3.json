{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nimport { getCoordPercentage } from '../utils/offsetCoordinates';\nvar MARGIN = 6;\nvar marginToPercentage = function marginToPercentage(container) {\n  return {\n    marginX: MARGIN / container.width * 100,\n    marginY: MARGIN / container.height * 100\n  };\n};\nexport var TYPE = 'POINT';\nexport function intersects(_ref, geometry, container) {\n  var x = _ref.x,\n    y = _ref.y;\n  var _marginToPercentage = marginToPercentage(container),\n    marginX = _marginToPercentage.marginX,\n    marginY = _marginToPercentage.marginY;\n  if (x < geometry.x - marginX) return false;\n  if (y < geometry.y - marginY) return false;\n  if (x > geometry.x + marginX) return false;\n  if (y > geometry.y + marginY) return false;\n  return true;\n}\nexport function area(geometry, container) {\n  var _marginToPercentage2 = marginToPercentage(container),\n    marginX = _marginToPercentage2.marginX,\n    marginY = _marginToPercentage2.marginY;\n  return marginX * marginY;\n}\nexport var methods = {\n  onClick: function onClick(annotation, e) {\n    if (!annotation.geometry) {\n      return _extends({}, annotation, {\n        selection: _extends({}, annotation.selection, {\n          showEditor: true,\n          mode: 'EDITING'\n        }),\n        geometry: _extends({}, annotation.geometry, getCoordPercentage(e), {\n          width: 0,\n          height: 0,\n          type: TYPE\n        })\n      });\n    } else {\n      return {};\n    }\n  }\n};\nexport default {\n  TYPE: TYPE,\n  intersects: intersects,\n  area: area,\n  methods: methods\n};","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","getCoordPercentage","MARGIN","marginToPercentage","container","marginX","width","marginY","height","TYPE","intersects","_ref","geometry","x","y","_marginToPercentage","area","_marginToPercentage2","methods","onClick","annotation","e","selection","showEditor","mode","type"],"sources":["C:/Users/CHAOS/Documents/GitHub/labelbox-web-app/frontend/node_modules/react-image-annotation/es/hocs/PointSelector.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport { getCoordPercentage } from '../utils/offsetCoordinates';\nvar MARGIN = 6;\n\nvar marginToPercentage = function marginToPercentage(container) {\n  return {\n    marginX: MARGIN / container.width * 100,\n    marginY: MARGIN / container.height * 100\n  };\n};\n\nexport var TYPE = 'POINT';\n\nexport function intersects(_ref, geometry, container) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  var _marginToPercentage = marginToPercentage(container),\n      marginX = _marginToPercentage.marginX,\n      marginY = _marginToPercentage.marginY;\n\n  if (x < geometry.x - marginX) return false;\n  if (y < geometry.y - marginY) return false;\n  if (x > geometry.x + marginX) return false;\n  if (y > geometry.y + marginY) return false;\n\n  return true;\n}\n\nexport function area(geometry, container) {\n  var _marginToPercentage2 = marginToPercentage(container),\n      marginX = _marginToPercentage2.marginX,\n      marginY = _marginToPercentage2.marginY;\n\n  return marginX * marginY;\n}\n\nexport var methods = {\n  onClick: function onClick(annotation, e) {\n    if (!annotation.geometry) {\n      return _extends({}, annotation, {\n        selection: _extends({}, annotation.selection, {\n          showEditor: true,\n          mode: 'EDITING'\n        }),\n        geometry: _extends({}, annotation.geometry, getCoordPercentage(e), {\n          width: 0,\n          height: 0,\n          type: TYPE\n        })\n      });\n    } else {\n      return {};\n    }\n  }\n};\n\nexport default {\n  TYPE: TYPE,\n  intersects: intersects,\n  area: area,\n  methods: methods\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}